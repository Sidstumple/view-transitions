@view-transition {
  navigation: auto;
}

:root {
  --ease: cubic-bezier(0.45, 0, 0.55, 1);
}

[style*='--vt'] {
  view-transition-name: var(--vt);
}



html:active-view-transition-type(overview-to-speaker),
html:active-view-transition-type(speaker-to-overview) {

  &::view-transition-new(root),
  &::view-transition-old(root) {
    animation-duration: 0.1s;
    animation-fill-mode: both;
    animation-timing-function: ease-in;
  }

  .speaker-card img {
    view-transition-class: speaker-image;
  }

  .speaker-image {
    view-transition-class: active-speaker;
  }

  &::view-transition-group(.speaker-image),
  &::view-transition-group(.active-speaker) {
    animation-duration: 0.6s;
    animation-fill-mode: both;
    animation-timing-function: var(--ease);
  }


  &::view-transition-group(.speaker-image) {
    z-index: 0;
    animation-duration: 0.6s;
    animation-timing-function: var(--ease);
  }

  &::view-transition-old(.speaker-image) {
    animation: scale-down 0.4s var(--ease) forwards;
  }

  &::view-transition-new(.speaker-image) {
    animation: scale-up 0.4s var(--ease) forwards;
  }


  &::view-transition-group(.active-speaker) {
    z-index: 1;
  }

  &::view-transition-new(.active-speaker),
  &::view-transition-old(.active-speaker) {
    animation: none;
    height: 100%;
    overflow: clip;
    object-fit: cover;
  }

}

html:active-view-transition-type(overview-to-speaker) {
  &::view-transition-new(.active-speaker) {
    display: none;
  }
}


html:active-view-transition-type(speaker-to-overview) {

  &::view-transition-old(.speaker-image),
  &::view-transition-old(.active-speaker) {
    display: none;
  }

  &::view-transition-group(.speaker-image),
  &::view-transition-group(.active-speaker) {
    animation-duration: 0.4s;
  }

  &::view-transition-old(root) {
    animation-duration: 0.3s;
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
  }


}

@keyframes scale-down {
  to {
    scale: 0;
    opacity: 0;
  }
}

@keyframes scale-up {
  from {
    scale: 0;
  }
}



.prev-speaker {
  view-transition-class: prev-speaker;
}

.next-speaker {
  view-transition-class: next-speaker;
}

:active-view-transition-type(speaker-to-speaker) {
  .speaker-image {
    view-transition-class: speaker-image;
  }

  &::view-transition-group(*) {
    animation-duration: 0.7s;
    animation-timing-function: var(--ease);

  }
  &::view-transition-group(.speaker-image) {
    animation-fill-mode: both;
    animation-timing-function: var(--ease);
  }

  &::view-transition-old(.speaker-image),
  &::view-transition-new(.speaker-image) {
    animation: none;
    z-index: 1;
  }

  &::view-transition-new(.prev-speaker):only-child,
  &::view-transition-new(.next-speaker):only-child {
    --x: 30vh;
    animation-name: moveIn; 
    animation-fill-mode: both;
    animation-timing-function: var(--ease);
    z-index: 0;
  }

  &::view-transition-old(.prev-speaker):only-child,
  &::view-transition-old(.next-speaker):only-child {
    --x: 30vh;
    animation-name: moveOut;
    animation-fill-mode: both;
    animation-timing-function: var(--ease);
    z-index: 0;
  }

  &::view-transition-new(.prev-speaker):only-child,
  &::view-transition-old(.prev-speaker):only-child {
    --x: -30vh;
  }
}

@keyframes moveIn {
  from {
    transform: translateX(var(--x));
  }
}

@keyframes moveOut {
  to {
    transform: translateX(var(--x));
  }
}